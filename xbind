#!/usr/bin/env node
const xb = require('./helpers.js')

let commandAvailable = ['add', 'delete', 'list', 'reload']
let command = process.argv[2]
let printUsage = () => console.log('Usage: xbind [add|delete|list] [command] [bind, ...]')
if (!command || ( command && commandAvailable.indexOf(command) === -1)) return printUsage()
if (command === 'add' && (!process.argv[3] || !process.argv[4])) return printUsage()
if (command === 'delete' && !process.argv[3]) return printUsage()

let fs = require('fs')
let xbind = fs.readFileSync('/home/server/.xbindkeysrc', {encoding: 'utf8'})
if (!xbind) {
  console.log('No ~/.xbindkeysrc found, please create this file first')
  process.exit(0)
}

if (command === 'add') {
  let option = {command: process.argv[3], binding: process.argv[4].split(',')}
  xb.writeXbind(xb.addXbind(xb.getXbind(xbind), option))
} else if (command === 'delete') {
  xb.writeXbind(xb.deleteXbind(xb.getXbind(xbind), process.argv[3].trim()))
} else if (command === 'list') {
  console.log(xb.getXbind(xbind))
  process.exit(0)
}

require('find-process')('name', 'xbindkeys').then(list => list.forEach(p => process.kill(p.pid))).catch(e => console.log(e))
require("child_process").exec('/usr/bin/xbindkeys -X :0').unref()
